{"ast":null,"code":"var _jsxFileName = \"/Users/asthathakur/Documents/GitHub/referralHub/src/Components/HomePage/RecommendedJobs/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ScrollMenu } from \"react-horizontal-scrolling-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberOfPicture = [1, 2, 3, 4, 5, 6];\n\nfunction RecommendedJobs() {\n  _s();\n\n  let scrl = useRef(null);\n  const [scrollX, setscrollX] = useState(0);\n  const [scrolEnd, setscrolEnd] = useState(false); //Slide click\n\n  const slide = shift => {\n    scrl.current.scrollLeft += shift;\n    setscrollX(scrollX + shift);\n\n    if (Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <= scrl.current.offsetWidth) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  }; //Anim\n\n\n  const anim = e => {\n    gsap.from(e.target, {\n      scale: 1\n    });\n    gsap.to(e.target, {\n      scale: 1.5\n    });\n  };\n\n  const anim2 = e => {\n    gsap.from(e.target, {\n      scale: 1.5\n    });\n    gsap.to(e.target, {\n      scale: 1\n    });\n  };\n\n  const scrollCheck = () => {\n    setscrollX(scrl.current.scrollLeft);\n\n    if (Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <= scrl.current.offsetWidth) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [scrollX !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prev\",\n      onClick: () => slide(-50),\n      onMouseEnter: e => anim(e),\n      onMouseLeave: e => anim2(e),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-angle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: scrl,\n      onScroll: scrollCheck,\n      children: data.fruits.map((d, i) => /*#__PURE__*/_jsxDEV(Tag, {\n        data: d\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), !scrolEnd && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: () => slide(+50),\n      onMouseEnter: e => anim(e),\n      onMouseLeave: e => anim2(e),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-angle-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RecommendedJobs, \"tFy7N9vf1ECDzwfq4DSV81AslEw=\");\n\n_c = RecommendedJobs;\nexport default RecommendedJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecommendedJobs\");","map":{"version":3,"sources":["/Users/asthathakur/Documents/GitHub/referralHub/src/Components/HomePage/RecommendedJobs/index.js"],"names":["React","ScrollMenu","numberOfPicture","RecommendedJobs","scrl","useRef","scrollX","setscrollX","useState","scrolEnd","setscrolEnd","slide","shift","current","scrollLeft","Math","floor","scrollWidth","offsetWidth","anim","e","gsap","from","target","scale","to","anim2","scrollCheck","data","fruits","map","d","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ScrollMenu } from \"react-horizontal-scrolling-menu\";\n\nconst numberOfPicture = [1, 2, 3, 4, 5, 6];\nfunction RecommendedJobs() {\n    let scrl = useRef(null);\n    const [scrollX, setscrollX] = useState(0);\n    const [scrolEnd, setscrolEnd] = useState(false);\n  \n    //Slide click\n    const slide = (shift) => {\n      scrl.current.scrollLeft += shift;\n      setscrollX(scrollX + shift);\n  \n      if (\n        Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n        scrl.current.offsetWidth\n      ) {\n        setscrolEnd(true);\n      } else {\n        setscrolEnd(false);\n      }\n    };\n  \n    //Anim\n    const anim = (e) => {\n      gsap.from(e.target, { scale: 1 });\n      gsap.to(e.target, { scale: 1.5 });\n    };\n    const anim2 = (e) => {\n      gsap.from(e.target, { scale: 1.5 });\n      gsap.to(e.target, { scale: 1 });\n    };\n  \n    const scrollCheck = () => {\n      setscrollX(scrl.current.scrollLeft);\n      if (\n        Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n        scrl.current.offsetWidth\n      ) {\n        setscrolEnd(true);\n      } else {\n        setscrolEnd(false);\n      }\n    };\n  \n    return (\n      <div className=\"App\">\n        {scrollX !== 0 && (\n          <button\n            className=\"prev\"\n            onClick={() => slide(-50)}\n            onMouseEnter={(e) => anim(e)}\n            onMouseLeave={(e) => anim2(e)}\n          >\n            <i className=\"fa fa-angle-left\"></i>\n          </button>\n        )}\n        <ul ref={scrl} onScroll={scrollCheck}>\n          {data.fruits.map((d, i) => (\n            <Tag data={d} key={i} />\n          ))}\n        </ul>\n        {!scrolEnd && (\n          <button\n            className=\"next\"\n            onClick={() => slide(+50)}\n            onMouseEnter={(e) => anim(e)}\n            onMouseLeave={(e) => anim2(e)}\n          >\n            <i className=\"fa fa-angle-right\"></i>\n          </button>\n        )}\n      </div>\n    );\n}\n\nexport default RecommendedJobs;\n"]},"metadata":{},"sourceType":"module"}